---
- name: Initialize ansible mgmt host localy
  hosts: localhost
  connection: local
  become: yes

  tasks:
  - name: Ensure group "ansible_admins" exists
    group:
      name: ansible_admins
      state: present

  - name: Create Ansible Admin user and Group
    user:
      name: "{{ user_ansible_admin }}"
      comment: "local ansible admin"
      group: ansible_admins
      shell: /bin/bash
      groups: sudo
      append: yes

  - name: Create folders with ownership
    file:
      state   : directory
      recurse : yes
      path    : "{{ item }}"
      owner: "{{ user_ansible_admin }}"
      group: ansible_admins
      mode    : "0775"
    with_items:
    - "{{ root_dir }}"
    - "{{ root_dir }}/ansible/private"
    - "{{ root_dir }}/ansible/public/roles"

  - name: Create Files that actually not exists
    file:
      state: touch
      path: "{{ item }}"
    with_items:
      - "{{ root_dir }}/ansible/private/inventory.yml"
      - "{{ root_dir }}/ansible/ansible.cfg"

  - name: Create quansible.cfg if not exists
    copy:
      src: "{{ dir_quansible }}/quansible.cfg"
      dest: "{{ root_dir }}/quansible.cfg"
      force: no

  - name: Set environment variables (ANSIBLE_CONFIG)
    shell: echo "export ANSIBLE_CONFIG={{ root_dir }}/ansible/ansible.cfg" >> /etc/profile.d/ansible_envs.sh

  - name: Set environment variables (A)
    shell: echo "export A={{ root_dir }}/ansible/" >> /etc/profile.d/ansible_envs.sh

  - name: Get All Ansible Roles by definition in config file (Currently Static Value)
    shell: curl -s "https://api.github.com/users/devd4n/repos?per_page=1000" | grep -w clone_url | grep -o '[^"]*\.git' | grep ansible_role
    register: result

  - name: Parse Ansible Roles
    local_action: copy content={{result.stdout}} dest={{ root_dir }}/ansible/requirements.yml

  - name: write Ansible Roles to requirements.yml
    replace:
      path: "{{ root_dir }}/ansible/requirements.yml"
      regexp: '^(.*)$'
      replace: '- src: \1'
      
  - name: fix file permissions
    file: 
      path: "{{ root_dir }}" 
      owner: "{{ user_ansible_admin }}"
      group: ansible_admins
      recurse: yes
